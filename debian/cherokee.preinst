#! /bin/sh
# preinst script for Cherokee
#
# see: dh_installdeb(1)

set -e

action=$1
version=$2

PATH=/bin:/sbin:/usr/bin:/usr/sbin

case "$action" in
    install|abort-upgrade)
	;;
    upgrade)
	if (  dpkg --compare-versions "$version" lt 0.6 )
	    then
	    # Previous versions included /etc/cherokee/mime*.types -
	    # Delete them on the spot!
	    rm -f /etc/cherokee/mime.types /etc/cherokee/mime.compression.types

	    # 0.5 configuration files must be converted - 0.6 uses a
	    # completely different syntax. 
	    CONFPATH=/etc/cherokee
	    OLDCONFPATH=$CONFPATH/pre-0.6
	    TMPCONFPATH=$(/bin/mktemp -d /tmp/cherokee_migration.XXXXXXXX)
	    MIGRATOR=/usr/share/cherokee/05to06.py
	    LOG=$OLDCONFPATH/0.6_migration.log
	    README=$OLDCONFPATH/0.6_migration_README
	    # There are some files we don't want to translate -
	    # README, MIME types, any possible files present in the
	    # migrtion directory, ... We will skip them in a regex way
	    IGNORE='README\|mime.types\|mime.compression.types\|pre-0.6'

	    if [ ! -f $MIGRATOR ]
		then
		echo Migrator script $MIGRATOR is not found.
		echo Please file a bug report, this should never happen!
		exit 1
	    fi

	    if [ ! -d $OLDCONFPATH ]; then mkdir -p $OLDCONFPATH; fi

	    echo "Starting Cherokee 0.5 -> 0.6 migration" > $LOG

	    for file in $(find -L $CONFPATH -type f | grep -v $IGNORE); do
		dirname=$(dirname $file | perl -pe "s%^$CONFPATH%%")
		filename=$(basename $file)

		oldfile=$OLDCONFPATH/$dirname/$filename
		tmpfile=$TMPCONFPATH/$dirname/$filename
		echo "----------------------------------------" >> $LOG
		echo "Translating $file ($oldfile => $tmpfile)" >> $LOG
		for base in $OLDCONFPATH $TMPCONFPATH
		do
		    if [ ! -d $base/$dirname ] ; then mkdir $base/$dirname; fi
		done

		if [ -L $file ]
		then
		    # Bah for symlinks :-P
		    cp -L $file $oldfile
		    rm $file
		else
		    # regular file
		    mv $file $oldfile		    
		fi

		if /usr/bin/python $MIGRATOR < $oldfile > $tmpfile 2>>$LOG
		then
		    echo $file was successfully migrated to temporary directory >> $LOG
		else
		    echo "*** ERROR MIGRATING $file - Follows:" >> $LOG
		    cat $file >> $LOG
		fi
	    done

	    echo "----------------------------------------" >> $LOG
	    echo "Merging migrated files into $CONFPATH/cherokee.conf" >> $LOG
	    cat $TMPCONFPATH/cherokee.conf | /usr/share/cherokee/config_joiner $CONFPATH $TMPCONFPATH > $CONFPATH/cherokee.conf 2>>$LOG

	    cat <<EOF > $README
For further information on the migration process, please refer to
/usr/share/doc/cherokee/README_0.5_to_0.6

Automated configuration conversion is attempted really hard - But it
cannot be guaranteed. Please file a bug on cherokee if we are missing
any bits of your configuration.

A log of the migration process will be saved in $LOG. 
Please include it in any bug reports regarding this migration!
EOF
	fi
	if ( dpkg --compare-versions "$version" lt 0.7 )
	    then
	    # The 0.6 -> 0.7 migration is smoother than 0.5 -> 0.6 -
	    # But still, we need to modify the configuration
	    # file... So a similar version to the previous dance still
	    # applies. And yes, both migrations will happen in a row
	    # when upgrading 0.5.x -> 0.7.x
	    #
    	    # 0.6 deprecates the configuration spillover into
	    # different files - We deal now only with cherokee.conf
	    CONFPATH=/etc/cherokee
	    OLDCONFPATH=$CONFPATH/pre-0.7
	    MIGRATOR=/usr/share/cherokee/06to07.py
	    LOG=$OLDCONFPATH/0.7_migration_log
	    README=$OLDCONFPATH/0.7_migration_README

	    mkdir -p $OLDCONFPATH
	    file=$CONFPATH/cherokee.conf
	    oldfile=$OLDCONFPATH/cherokee.conf
	    echo "----------------------------------------" >> $LOG
	    echo "Translating $file" >> $LOG
	    mv $file $oldfile
	    if /usr/bin/python $MIGRATOR $oldfile $file 2>>$LOG
	    then
		echo $file was successfully migrated >> $LOG
	    else
		echo "*** ERROR MIGRATING $file - Follows:" >> $LOG
		cat $file >> $LOG
	    fi

	    cat <<EOF > $README
Your Cherokee 0.6.x configuration file has been converted to the 0.7.x 
format. Automatic conversion is expected to succeed - but in case your server
no longer works as expected, your original file is still available in this 
directory.

A log of the migration process has been saved in $LOG. Please include it in any
bug reports regarding this migration!
EOF
	fi
	;;
    *)
        echo "preinst called with unknown argument \`$action'" >&2
        exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


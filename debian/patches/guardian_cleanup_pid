Index: cherokee-0.7.2/cherokee/main_guardian.c
===================================================================
--- cherokee-0.7.2.orig/cherokee/main_guardian.c	2008-05-22 14:26:48.000000000 -0500
+++ cherokee-0.7.2/cherokee/main_guardian.c	2008-06-30 11:11:24.000000000 -0500
@@ -26,6 +26,7 @@
 #include <signal.h>
 #include <unistd.h>
 #include <sys/wait.h>
+#include <sys/stat.h>
 #include <errno.h>
 #include "server.h"
 
@@ -33,13 +34,46 @@
 # include <getopt.h>
 #endif
 
-#define ERROR_DELAY       3000 * 1000
-#define RESTARTING_DELAY   500 * 1000
+#define DELAY_ERROR       3000 * 1000
+#define DELAY_RESTARTING   500 * 1000
 #define PID_FILE          CHEROKEE_VAR_RUN "/cherokee-guardian.pid"
 
 static cherokee_boolean_t exit_guardian = false;
 static pid_t              pid;
 
+static void
+pid_file_save (const char *pid_file, int pid)
+{
+	FILE *file;
+	char  tmp[10];
+
+	file = fopen (pid_file, "w+");
+	if (file == NULL) {
+		PRINT_MSG ("Cannot write PID file '%s'\n", pid_file);
+		return;
+	}
+
+	snprintf (tmp, sizeof(tmp), "%d\n", pid);
+	fwrite (tmp, 1, strlen(tmp), file);
+	fclose (file);
+}
+
+static void
+pid_file_clean (const char *pid_file)
+{
+	struct stat info;
+
+	if (lstat (pid_file, &info) != 0) 
+		return;
+	if (! S_ISREG(info.st_mode))
+		return;
+	if (info.st_uid != getuid())
+		return;
+	if (info.st_size > sizeof("65535\r\n"))
+		return;
+
+	unlink (pid_file);
+}
 
 static ret_t
 process_wait (pid_t pid)
@@ -67,7 +101,6 @@
 	return ret_ok;
 }
 
-
 static void 
 guardian_signals_handler (int sig, siginfo_t *si, void *context) 
 {
@@ -92,6 +125,7 @@
 		/* Kill child and exit */
 		kill (pid, SIGTERM);
 		process_wait (pid);
+		pid_file_clean (PID_FILE);
 		exit(0);
 
 	default:
@@ -163,45 +197,50 @@
 	return pid;
 }
 
-
-static void
-save_pid_file (int pid)
+static cherokee_boolean_t
+is_single_execution (int argc, char *argv[])
 {
-	FILE *file;
-	char  tmp[10];
-
-	UNUSED(pid);
+	int i;
 
-	file = fopen (PID_FILE, "w+");
-	if (file == NULL) {
-		PRINT_MSG ("Cannot write PID file '%s'\n", PID_FILE);
+	for (i=0; i<argc; i++) {
+		if (!strcmp (argv[i], "-t") || !strcmp (argv[i], "--test")    ||
+		    !strcmp (argv[i], "-h") || !strcmp (argv[i], "--help")    ||
+		    !strcmp (argv[i], "-V") || !strcmp (argv[i], "--version") ||
+		    !strcmp (argv[i], "-i") || !strcmp (argv[i], "--print-server-info"))
+			return true;
 	}
 
-	snprintf (tmp, sizeof(tmp), "%d\n", getpid());
-	fwrite (tmp, 1, strlen(tmp), file);
-	fclose (file);
+	return false;
 }
 
-
 int
 main (int argc, char *argv[])
 {
-	ret_t ret;
+	ret_t              ret;
+	cherokee_boolean_t single_time;
 
 	set_guardian_signals();	   
+	single_time = is_single_execution (argc, argv);
+
+	if (! single_time)
+		pid_file_save (PID_FILE, getpid());
 
-	while (! exit_guardian) {
+	do {
 		pid = process_launch (CHEROKEE_SRV_PATH, argc, argv);
 		if (pid < 0) {
 			PRINT_MSG ("Couldn't launch '%s'\n", CHEROKEE_SRV_PATH);
 			exit (1);
 		}
-		
-		save_pid_file(pid);
 
-		ret = process_wait (pid);
-		usleep ((ret == ret_ok) ? RESTARTING_DELAY : ERROR_DELAY);
-	} 
+		ret = process_wait (pid);		
+		if (single_time)
+			break;
+
+		usleep ((ret == ret_ok) ? 
+			DELAY_RESTARTING : 
+			DELAY_ERROR);
+	} while (! exit_guardian);
 
+	pid_file_clean (PID_FILE);
 	return 0;
 }
